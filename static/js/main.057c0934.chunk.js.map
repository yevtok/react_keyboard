{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","firstRender","pressedKey","pressKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,aAAa,EACbC,WAAY,IAHhB,EAcEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEJ,aAAa,EAAOC,WAAYE,EAAME,OAf1D,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,YAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAX/C,oBAkBE,WACE,MAAoCM,KAAKT,MAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAErB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIV,EAGA,0BAHD,mCAC6BC,EAD7B,aAxBX,GAAyBU,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.057c0934.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  firstRender: boolean,\n  pressedKey: string,\n};\n\nexport class App extends React.Component {\n  state: State = {\n    firstRender: true,\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.pressKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.pressKey);\n  }\n\n  pressKey = (event: KeyboardEvent) => {\n    this.setState({ firstRender: false, pressedKey: event.key });\n  };\n\n  render() {\n    const { firstRender, pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!firstRender ? (\n            `The last pressed key is [${pressedKey}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}